# Main documentation target
all_docs: publish
.PHONY: all_docs

# Import variables from the main Makefile
# (must be placed below main target).
include ../Makefile
building = documentation  # Change heading text

# Additional variables
SPHINXOPTS  =
SPHINXBUILD = $(python) -m sphinx
SOURCEDIR   = .
BUILDDIR    = build
STATICDIR   = static
PUBLISHDIR  = publish

# The content of README.md placed together with the published documentation
define README_body
CO*N*CEPT documentation
=======================
<img align="right" height="300" src="/static/render2D.png"/>

This is the git branch for the published CO*N*CEPT documentation,
which is most likely not what you are looking for.

Useful links:

* [Hosted documentation][documentation_hosted]
* [Source code for documentation][documentation_source]
* [Code repository (master branch)][master_branch]

[documentation_hosted]: https://jmd-dk.github.io/concept/
[documentation_source]: https://github.com/jmd-dk/concept/tree/master/concept/docs/
[master_branch]: https://github.com/jmd-dk/concept/

endef
export README_body

# HTML documentation using Sphinx
sphinx: $(MAKEFILE_LIST)
	@$(call heading)
	@# Forces Sphinx to remake HTML
	@touch index.rst
	@# Build HTML with Sphinx
	@$(SPHINXBUILD) -M html "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS)
.PHONY: sphinx

# Various cleanups performed on the HTML generated by Sphinx
html: sphinx
	@$(call heading)
	@# Change GitHub button text and link
	@for filename in $$(find $(BUILDDIR)/html/ -name '*.html'); do                       \
	    sed -i 's/Edit on GitHub/Code Repository/g' "$${filename}";                      \
	    sed -i 's/github\.com\/\/[^"]*/github\.com\/jmd-dk\/concept\//g' "$${filename}"; \
	done
	@# Write the N in COùòïCEPT in italics via HTML tags.
	@# In headings, also insert a small (en) space after N,
	@# needed due to the heading font.
	@for filename in $$(find $(BUILDDIR)/html/ -name '*.html'); do                       \
	    for h in 1 2 3 4 5 6; do                                                         \
	        sed                                                                          \
	            -i                                                                       \
	            "s/\(<h$${h}>.*\)\(CONCEPT\)\(.*<\/h$${h}>.*\)/\1CO<em>N<\/em>‚ÄÇCEPT\3/g" \
	            "$${filename}"                                                           \
	        ;                                                                            \
	    done;                                                                            \
	    sed -i 's/CONCEPT/CO<em>N<\/em>CEPT/g' "$${filename}";                           \
	done
	@# Change search placeholder text
	@for filename in $$(find $(BUILDDIR)/html/ -name '*.html'); do                                \
	    sed -i 's/placeholder="Search docs"/placeholder="Search documentation"/g' "$${filename}"; \
	done
	@# Change search result text
	@filename=$(BUILDDIR)/html/_static/searchtools.js;                                                                \
	pattern='Search Results';                                                                                         \
	linenr_1=$$(awk "\$$0 ~ \"$${pattern}\" {print NR}" "$${filename}" | head -n 1);                                  \
	pattern='Search finished, found';                                                                                 \
	linenr_2=$$(awk "\$$0 ~ \"$${pattern}\" {print NR}" "$${filename}" | head -n 1);                                  \
	sed -i "$${linenr_1},$${linenr_2}d" "$${filename}";                                                               \
	indentation="        ";                                                                                           \
	new_lines="\        Search.title.text(_('Search results'));\n\
	$${indentation}if ("'!'"resultCount)\n\
	$${indentation}  Search.status.text(_('Could not find anything matching the search query.'));\n\
	$${indentation}else if (resultCount == 1)\n\
	$${indentation}  Search.status.text(_('Found 1 page matching the search query.'));\n\
	$${indentation}else\n\
	$${indentation}  Search.status.text(_('Found %s pages matching the search query.').replace('%s', resultCount));"; \
	sed -i "$${linenr_1}i$${new_lines}" "$${filename}"
	@# Remove HTML tags from titles
	@for filename in $$(find $(BUILDDIR)/html/ -name '*.html'); do                  \
	    sed                                                                         \
	        -i                                                                      \
	        '/<title>.*CO<em>N<\/em>CEPT.*<\/title>/ s/CO<em>N<\/em>CEPT/CONCEPT/g' \
	        "$${filename}"                                                          \
	    ;                                                                           \
	done
	@# Insert current date in place of |today|
	@sed -i "s/|today|/$$(date '+%B %d, %Y')/g" $(BUILDDIR)/html/index.html
	@# Remove "Next" and "Previous" buttons between chapters
	@sed -i 's/.*Previous<.*//g' $(BUILDDIR)/html/index.html
	@sed -i 's/.*>Next .*//g'    $(BUILDDIR)/html/index.html
	@sed -i 's/.*Previous<.*//g' $(BUILDDIR)/html/tutorial/tutorial.html
	@sed -i 's/.*>Next .*//g'    $(BUILDDIR)/html/tutorial/gadget.html
	@sed -i 's/.*Previous<.*//g' $(BUILDDIR)/html/installation.html
	@sed -i 's/.*>Next .*//g'    $(BUILDDIR)/html/installation.html
	@sed -i 's/.*Previous<.*//g' $(BUILDDIR)/html/command_line_options.html
	@sed -i 's/.*>Next .*//g'    $(BUILDDIR)/html/command_line_options.html
	@sed -i 's/.*Previous<.*//g' $(BUILDDIR)/html/parameters/parameters.html
	@sed -i 's/.*>Next .*//g'    $(BUILDDIR)/html/parameters/debugging_options.html
	@sed -i 's/.*Previous<.*//g' $(BUILDDIR)/html/utilities/utilities.html
	@for filename in $$(find $(BUILDDIR)/html/utilities/ -name '*.html'); do \
	    sed -i 's/.*Previous<.*//g' "$${filename}";                          \
	    sed -i 's/.*>Next .*//g' "$${filename}";                             \
	done
	@sed -i 's/.*Previous<.*//g' $(BUILDDIR)/html/under_the_hood.html
	@sed -i 's/.*>Next .*//g'    $(BUILDDIR)/html/under_the_hood.html
	@sed -i 's/.*>Next .*//g'    $(BUILDDIR)/html/troubleshooting.html
	@sed -i 's/.*Previous<.*//g' $(BUILDDIR)/html/troubleshooting.html
	@sed -i 's/.*>Next .*//g'    $(BUILDDIR)/html/publications.html
	@sed -i 's/.*Previous<.*//g' $(BUILDDIR)/html/publications.html
	@# Convert all tables in the parameter sections to plain tables
	@for filename in $$(find $(BUILDDIR)/html/parameters/ -name '*.html'); do \
	    sed -i 's/<table class="docutils.*"/<table/g' $${filename};           \
	done
	@# Remove padding at the bottom of tabs
	@(                                                                               \
	    pattern='class="ui bottom attached sphinx-tab tab';                          \
	    for filename in $$(find $(BUILDDIR)/html/ -name '*.html'); do                \
	        sed                                                                      \
	            -i                                                                   \
	            "s/<div $${pattern}/<div style=\"padding-bottom: 0;\" $${pattern}/g" \
	            "$${filename}"                                                       \
	        ;                                                                        \
	    done                                                                         \
	)
	@# Remove extra newline placed before emphasized code block lines
	@# (only visible after copying using Sphinx-copybutton).
	@(                                                                                         \
	    pattern='span *class=\"hll\"';                                                         \
	    for filename in $$(find $(BUILDDIR)/html/ -name '*.html'); do                          \
	        for linenr in $$(awk "\$$0 ~ \"$${pattern}\" {print NR}" "$${filename}" | tac); do \
	            ((linenr -= 1));                                                               \
	            line="$$(sed "$${linenr}!d" "$${filename}")";                                  \
	            if [ -z "$${line}" ]; then                                                     \
	                sed -i "$${linenr}d" "$${filename}";                                       \
	                sed -i "$${linenr}i<span> </span>" "$${filename}";                         \
	            fi;                                                                            \
	            sed -i "$${linenr}{N;s/\n//;}" "$${filename}";                                 \
	        done;                                                                              \
	        for linenr in $$(awk "\$$0 ~ \"$${pattern}\" {print NR}" "$${filename}" | tac); do \
	            sed -i "$${linenr}{N;s/\n//;}" "$${filename}";                                 \
	        done                                                                               \
	    done                                                                                   \
	)
.PHONY: html

# HTML ready for publication
publish: html clean_sphinx_publish
	@$(call heading)
	@mkdir -p $(PUBLISHDIR)
	@cp -r $(BUILDDIR)/html/* $(PUBLISHDIR)/
	@touch $(PUBLISHDIR)/.nojekyll
	@echo "$$README_body" > $(PUBLISHDIR)/README.md
	@printf "\nThe html documentation has been collected in \"$(PUBLISHDIR)\"\n"
.PHONY: publish



# Cleanup targets
.PHONY:                  \
    clean_sphinx_build   \
    clean_sphinx_publish \
    clean_sphinx         \

clean_sphinx_build:
	$(RM) -r $(BUILDDIR)
clean_sphinx_publish:
	$(RM) -r $(PUBLISHDIR)/{.[!.git],}*
clean_sphinx: clean_sphinx_build clean_sphinx_publish

