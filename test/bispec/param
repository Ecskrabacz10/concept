# Input/output
_size = 128
initial_conditions = {
    'species': 'matter',
    'N'      : _size**3,
}
output_dirs = f'{param.dir}/output'
output_times = {
    'bispec': a_begin,
}

# Numerics
boxsize = 16*_size*Mpc
bispec_options = {
    'configuration': {
        'all': {
            'k': 'logspace(log10(1.5*k_fundamental), log10(Nyquist), int(20*log10(Nyquist/(1.5*k_fundamental))))',
            't': 1,
            'μ': 0.5,
        },
    },
    'shellthickness': {
        'all': {
            '1*k_fundamental': '0.25*k_fundamental',
            '4*k_fundamental': 'max(3*k_fundamental, 1/20*log(10)*k)',
        },
    },
}
if _k_samples:
    bispec_options['configuration']['all'] = [
        _kvec2ktμ(*kvec) for kvec in _k_samples
    ]

# Cosmology
a_begin = 0.01

# Physics
realization_options = {
    'LPT': 2,
}

# Simulation
primordial_amplitude_fixed = True

# Default bispectrum triangle configurations
# and function to convert from (k₁, k₂, k₃) to (k, t, μ).
_k_samples = None
def _kvec2ktμ(k1, k2, k3):
    return f'{k1}*k_fundamental', k2/k1, (k1**2 + k2**2 - k3**2)/(2*k1*k2)

